DOCUMENT();

####################
# Load Macros
####################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "AnswerFormatHelp.pl",
  "parserPopUp.pl",
  "parserRadioButtons.pl",
  "PGcourse.pl",
  "PGchoicemacros.pl",
  "PGanswermacros.pl",
  "PGnauGraphtheory.pl" 
);

####################
# Header
####################
COMMENT();
TEXT(beginproblem());

####################
# PG Setup
####################
Context('Numeric');

$mc=new_checkbox_multiple_choice();
$mc->qa("Given the following graph, select all that apply.", "Connected", "Euler Path", "Chromatic Number = 4");
$mc->makeLast("Connected", "Complete", "Bipartite", "Complete Bipartite", "Euler Path", "Euler Circuit", "Chromatic Number = 4", "Chromatic Number < 4", "Chromatic Number > 4");
do {
  $size = 5;  # number of vertices
  $letters = join '', 'A'..'Z';
  $offset = random(0,25 - $size, 1);
  $labels = substr $letters, $offset, $size ;
  $vertices = GRvertices_labels_size($labels,$size);
  $graph = GRgraph_size_random($size,0.9);
  $edges = GRedgesstr_graph_labels($graph,$labels);
  $vertex1 = random(0, $size-1, 1);
  do {
    $vertex2 = random(0, $size-1, 1);
  } while ($vertex1==$vertex2);

  $vertexlabel1 = GRlabel_vertex_labels($vertex1,$labels);
  $vertexlabel2 = GRlabel_vertex_labels($vertex2,$labels);
  $ans1 = &GRdegree_graph_vertex($graph,$vertex1);
  $ans2 = &GRdegree_graph_vertex($graph,$vertex2);
} while ($ans1 == $ans2);
$ans3 = GRncomponents_graph($graph);
$pic = GRpic_graph_labels($graph,$labels);

####################
# Body
####################
BEGIN_PGML

[@  $mc  ->  print_q()  @]*

[@ Plot($pic)@]*

[@  $mc  ->  print_a()  @]*

END_PGML

install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 0;

ANS( checkbox_cmp( $mc->correct_ans() ) );

####################
# Solution
####################


####################
# End Problem
####################
ENDDOCUMENT();
